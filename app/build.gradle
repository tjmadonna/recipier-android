apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.inelasticcollision.recipelink"
        minSdkVersion 14
        targetSdkVersion 29
        versionCode 20
        versionName "2.2.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    // Import api keys from keystore.properties file
    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    buildTypes.each {
        it.buildConfigField 'String', 'REMOTE_SERVICE_API_KEY', keystoreProperties['RemoteServiceApiKey']
        it.buildConfigField 'String', 'REMOTE_SERVICE_BASE_URL', keystoreProperties['RemoteServiceBaseUrl']
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Android X
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.legacy:legacy-support-v4:$legacySupportVersion"
    implementation "androidx.vectordrawable:vectordrawable:$vectorDrawableVersion"

    // Material design
    implementation "com.google.android.material:material:$materialVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"

    // RxJava/RxAndroid
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"

    // SQLBrite
    implementation "com.squareup.sqlbrite2:sqlbrite:$sqlBriteVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-all:$mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "org.powermock:powermock-module-junit4:$powerMockito"
    testImplementation "org.powermock:powermock-api-mockito:$powerMockito"

    // Android Testing Support Library's runner and rules
    androidTestImplementation "androidx.test:runner:$runnerVersion"
    androidTestImplementation "androidx.test:rules:$rulesVersion"

    // Espresso UI Testing dependencies.
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
}