apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.inelasticcollision.recipelink"
        minSdkVersion 14
        targetSdkVersion 29
        versionCode 21
        versionName "2.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    // Import api keys from keystore.properties file
    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    buildTypes.each {
        it.buildConfigField 'String', 'REMOTE_SERVICE_API_KEY', keystoreProperties['RemoteServiceApiKey']
        it.buildConfigField 'String', 'REMOTE_SERVICE_BASE_URL', keystoreProperties['RemoteServiceBaseUrl']
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    // Room migration
    defaultConfig {
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    // Include the testShared directory in both the test and androidTest
    sourceSets {
        test {
            java.srcDirs += "$projectDir/src/testShared"
        }

        androidTest {
            java.srcDirs += "$projectDir/src/testShared"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // AndroidX
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.legacy:legacy-support-v4:$legacySupportVersion" // Mark for deletion
    implementation "androidx.vectordrawable:vectordrawable:$vectorDrawableVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    // AndroidX Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$savedstate_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Material design
    implementation "com.google.android.material:material:$materialVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"

    // RxJava/RxAndroid
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion" // Mark for deletion
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion" // Mark for deletion

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion" // Mark for deletion

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion" // Mark for deletion
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-all:$mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "org.powermock:powermock-module-junit4:$powerMockito"
    testImplementation "org.powermock:powermock-api-mockito:$powerMockito"
    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"

    // Android Testing Support Library's runner and rules
    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'

    // Espresso UI Testing dependencies.
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"

    // Room testing
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
}